services:
  # --- Django Application Service ---
  web:
    # Build the image from the Dockerfile in the current directory
    build: .
    # Name the custom image using the project name for easy identification
    image: maderasisabella_web
    # Name the running container
    container_name: maderasisabella_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      # Mount local code into the container for live development
      - .:/app
      # Use named volumes for persistent static and media files
      - maderasisabella_static_volume:/app/staticfiles
      - maderasisabella_media_volume:/app/media
    ports:
      - "8015:8000"
    networks:
      - maderasisabella_network
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db # This should always be the service name of the database
      - DB_PORT=${DB_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    # This service will not start until the 'db' service reports as healthy
    depends_on:
      db:
        condition: service_healthy

  # --- MySQL Database Service ---
  db:
    image: mysql:8.0
    container_name: maderasisabella_mysql_db
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      # Use a named volume for persistent database data
      - maderasisabella_mysql_data:/var/lib/mysql
    networks:
      - maderasisabella_network
    ports:
      - "3315:3306"
    # Healthcheck ensures the database is fully initialized and ready
    # for connections before other services start.
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- phpMyAdmin Service ---
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: maderasisabella_phpmyadmin_gui
    environment:
      PMA_HOST: db # Points to the database service
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8030:80"
    networks:
      - maderasisabella_network
    # This service also waits for the database to be healthy
    depends_on:
      db:
        condition: service_healthy

# --- Network Definition ---
# A dedicated network for the project's services to communicate
networks:
  maderasisabella_network:
    driver: bridge

# --- Volume Definitions ---
# Defines the named volumes for data persistence
volumes:
  maderasisabella_mysql_data: {}
  maderasisabella_static_volume: {}
  maderasisabella_media_volume: {}
